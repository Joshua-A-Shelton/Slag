#ifndef SLAG_OPERATIONS_H
#define SLAG_OPERATIONS_H

#define COMPARISON_FUNCTION(DEFINITION) \
DEFINITION(COMPARISION_NEVER,VK_COMPARE_OP_NEVER,D3D12_COMPARISON_FUNC_NEVER)\
DEFINITION(COMPARISION_LESS,VK_COMPARE_OP_LESS,D3D12_COMPARISON_FUNC_LESS)\
DEFINITION(COMPARISION_LESS_OR_EQUAL,VK_COMPARE_OP_LESS_OR_EQUAL,D3D12_COMPARISON_FUNC_LESS_EQUAL)\
DEFINITION(COMPARISION_GREATER,VK_COMPARE_OP_GREATER,D3D12_COMPARISON_FUNC_GREATER)\
DEFINITION(COMPARISION_GREATER_OR_EQUAL,VK_COMPARE_OP_GREATER_OR_EQUAL,D3D12_COMPARISON_FUNC_GREATER_EQUAL) \
DEFINITION(COMPARISION_EQUAL,VK_COMPARE_OP_EQUAL,D3D12_COMPARISON_FUNC_EQUAL)\
DEFINITION(COMPARISION_NOT_EQUAL,VK_COMPARE_OP_NOT_EQUAL,D3D12_COMPARISON_FUNC_NOT_EQUAL)\
DEFINITION(COMPARISION_ALWAYS,VK_COMPARE_OP_ALWAYS,D3D12_COMPARISON_FUNC_ALWAYS)\

#define BLEND_FACTOR_DEFINTITIONS(DEFINITION) \
DEFINITION(BLEND_FACTOR_ZERO,VK_BLEND_FACTOR_ZERO,D3D12_BLEND_ZERO)\
DEFINITION(BLEND_FACTOR_ONE,VK_BLEND_FACTOR_ONE,D3D12_BLEND_ONE )\
DEFINITION(BLEND_FACTOR_SRC_COLOR,VK_BLEND_FACTOR_SRC_COLOR,D3D12_BLEND_SRC_COLOR)\
DEFINITION(BLEND_FACTOR_ONE_MINUS_SRC_COLOR,VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR,D3D12_BLEND_INV_SRC_COLOR)\
DEFINITION(BLEND_FACTOR_DST_COLOR,VK_BLEND_FACTOR_DST_COLOR,D3D12_BLEND_DEST_COLOR)\
DEFINITION(BLEND_FACTOR_ONE_MINUS_DST_COLOR,VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR,D3D12_BLEND_INV_DEST_COLOR)\
DEFINITION(BLEND_FACTOR_SRC_ALPHA,VK_BLEND_FACTOR_SRC_ALPHA,D3D12_BLEND_SRC_ALPHA)\
DEFINITION(BLEND_FACTOR_ONE_MINUS_SRC_ALPHA,VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA,D3D12_BLEND_INV_SRC_ALPHA )\
DEFINITION(BLEND_FACTOR_DST_ALPHA,VK_BLEND_FACTOR_DST_ALPHA,D3D12_BLEND_DEST_ALPHA )\
DEFINITION(BLEND_FACTOR_ONE_MINUS_DST_ALPHA,VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA,D3D12_BLEND_INV_DEST_ALPHA )\
DEFINITION(BLEND_FACTOR_CONSTANT_COLOR,VK_BLEND_FACTOR_CONSTANT_COLOR,D3D12_BLEND_BLEND_FACTOR)\
DEFINITION(BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR,VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR,D3D12_BLEND_INV_BLEND_FACTOR)\
DEFINITION(BLEND_FACTOR_CONSTANT_ALPHA,VK_BLEND_FACTOR_CONSTANT_ALPHA,D3D12_BLEND_ALPHA_FACTOR )\
DEFINITION(BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA,VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA,D3D12_BLEND_INV_ALPHA_FACTOR )\
DEFINITION(BLEND_FACTOR_SRC_ALPHA_SATURATE,VK_BLEND_FACTOR_SRC_ALPHA_SATURATE,D3D12_BLEND_SRC_ALPHA_SAT )\
DEFINITION(BLEND_FACTOR_SRC1_COLOR,VK_BLEND_FACTOR_SRC1_COLOR,D3D12_BLEND_SRC1_COLOR )\
DEFINITION(BLEND_FACTOR_ONE_MINUS_SRC1_COLOR,VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR,D3D12_BLEND_INV_SRC1_COLOR )\
DEFINITION(BLEND_FACTOR_SRC1_ALPHA,VK_BLEND_FACTOR_SRC1_ALPHA,D3D12_BLEND_SRC1_ALPHA )\
DEFINITION(BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA,VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA,D3D12_BLEND_INV_SRC1_ALPHA)\

#define BLEND_OP_DEFINTITIONS(DEFINITION) \
DEFINITION(BLEND_OP_ADD,VK_BLEND_OP_ADD,D3D12_BLEND_OP_ADD)\
DEFINITION(BLEND_OP_SUBTRACT,VK_BLEND_OP_SUBTRACT,D3D12_BLEND_OP_SUBTRACT)\
DEFINITION(BLEND_OP_REVERSE_SUBTRACT,VK_BLEND_OP_REVERSE_SUBTRACT,D3D12_BLEND_OP_REV_SUBTRACT)\
DEFINITION(BLEND_OP_MIN,VK_BLEND_OP_MIN,D3D12_BLEND_OP_MIN)\
DEFINITION(BLEND_OP_MAX,VK_BLEND_OP_MAX,D3D12_BLEND_OP_MAX)\

#define FRAMEBUFFER_LOGICAL_OP_DEFINITIONS(DEFINITION) \
DEFINITION(LOGIC_OP_CLEAR,VK_LOGIC_OP_CLEAR,D3D12_LOGIC_OP_CLEAR)\
DEFINITION(LOGIC_OP_AND,VK_LOGIC_OP_AND,D3D12_LOGIC_OP_AND)\
DEFINITION(LOGIC_OP_AND_REVERSE,VK_LOGIC_OP_AND_REVERSE,D3D12_LOGIC_OP_AND_REVERSE)\
DEFINITION(LOGIC_OP_COPY,VK_LOGIC_OP_COPY,D3D12_LOGIC_OP_COPY)\
DEFINITION(LOGIC_OP_AND_INVERTED,VK_LOGIC_OP_AND_INVERTED,D3D12_LOGIC_OP_AND_INVERTED)\
DEFINITION(LOGIC_OP_NO_OP,VK_LOGIC_OP_NO_OP,D3D12_LOGIC_OP_NOOP)\
DEFINITION(LOGIC_OP_XOR,VK_LOGIC_OP_XOR,D3D12_LOGIC_OP_XOR)\
DEFINITION(LOGIC_OP_OR,VK_LOGIC_OP_OR,D3D12_LOGIC_OP_OR)\
DEFINITION(LOGIC_OP_NOR,VK_LOGIC_OP_NOR,D3D12_LOGIC_OP_NOR)\
DEFINITION(LOGIC_OP_EQUIVALENT,VK_LOGIC_OP_EQUIVALENT,D3D12_LOGIC_OP_EQUIV)\
DEFINITION(LOGIC_OP_INVERT,VK_LOGIC_OP_INVERT,D3D12_LOGIC_OP_INVERT)\
DEFINITION(LOGIC_OP_REVERSE,VK_LOGIC_OP_OR_REVERSE,D3D12_LOGIC_OP_AND_REVERSE)\
DEFINITION(LOGIC_OP_COPY_INVERTED,VK_LOGIC_OP_COPY_INVERTED,D3D12_LOGIC_OP_COPY_INVERTED)\
DEFINITION(LOGIC_OP_OR_INVERTED,VK_LOGIC_OP_OR_INVERTED,D3D12_LOGIC_OP_OR_INVERTED)\
DEFINITION(LOGIC_OP_NAND,VK_LOGIC_OP_NAND,D3D12_LOGIC_OP_NAND)\
DEFINITION(LOGIC_OP_SET,VK_LOGIC_OP_SET,D3D12_LOGIC_OP_SET)\

#define STENCIL_OP_DEFINITIONS(DEFINITION)\
DEFINITION(STENCIL_OP_KEEP,VK_STENCIL_OP_KEEP,D3D12_STENCIL_OP_KEEP)\
DEFINITION(STENCIL_OP_ZERO,VK_STENCIL_OP_ZERO,D3D12_STENCIL_OP_ZERO)\
DEFINITION(STENCIL_OP_REPLACE,VK_STENCIL_OP_REPLACE,D3D12_STENCIL_OP_REPLACE)\
DEFINITION(STENCIL_OP_INCREMENT_AND_CLAMP,VK_STENCIL_OP_INCREMENT_AND_CLAMP,D3D12_STENCIL_OP_INCR_SAT)\
DEFINITION(STENCIL_OP_DECREMENT_AND_CLAMP,VK_STENCIL_OP_DECREMENT_AND_CLAMP,D3D12_STENCIL_OP_DECR_SAT)\
DEFINITION(STENCIL_OP_INVERT,VK_STENCIL_OP_INVERT,D3D12_STENCIL_OP_INVERT)\
DEFINITION(STENCIL_OP_INCREMENT_AND_WRAP,VK_STENCIL_OP_INCREMENT_AND_WRAP,D3D12_STENCIL_OP_INCR)\
DEFINITION(STENCIL_OP_DECREMENT_AND_WRAP,VK_STENCIL_OP_DECREMENT_AND_WRAP,D3D12_STENCIL_OP_DECR)\

namespace slag
{
    struct Operations
    {
        enum ComparisonFunction
        {
#define DEFINITION(slagName, vulkanName, dx12Name) slagName,
            COMPARISON_FUNCTION(DEFINITION)
#undef DEFINITION
        };
        enum BlendFactor
        {
#define DEFINITION(SlagName, VulkanName, DXName) SlagName,
            BLEND_FACTOR_DEFINTITIONS(DEFINITION)
#undef DEFINITION
        };
        enum BlendOperation
        {
#define DEFINITION(SlagName, VulkanName, DXName) SlagName,
            BLEND_OP_DEFINTITIONS(DEFINITION)
#undef DEFINITION
        };
        enum LogicalOperation
        {
#define DEFINITION(SlagName,VulkanName,DX12Name) SlagName,
            FRAMEBUFFER_LOGICAL_OP_DEFINITIONS(DEFINITION)
#undef DEFINITION
        };
        enum StencilOperation
        {
#define DEFINITION(SlagName,VulkanName, DX12Name) SlagName,
            STENCIL_OP_DEFINITIONS(DEFINITION)
#undef DEFINITION
        };
    };
}
#endif //SLAG_OPERATIONS_H
